[{"/Users/ken0426/Documents/sano-project/react-todo-app/src/index.js":"1","/Users/ken0426/Documents/sano-project/react-todo-app/src/App.jsx":"2","/Users/ken0426/Documents/sano-project/react-todo-app/src/components/IncompleteTodo.jsx":"3","/Users/ken0426/Documents/sano-project/react-todo-app/src/components/InputTodo.jsx":"4","/Users/ken0426/Documents/sano-project/react-todo-app/src/components/CompleteTodo.jsx":"5"},{"size":210,"mtime":1651849136073,"results":"6","hashOfConfig":"7"},{"size":2760,"mtime":1652537371222,"results":"8","hashOfConfig":"7"},{"size":2052,"mtime":1652540543231,"results":"9","hashOfConfig":"7"},{"size":411,"mtime":1652533222319,"results":"10","hashOfConfig":"7"},{"size":503,"mtime":1652028454243,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9d3hix",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/ken0426/Documents/sano-project/react-todo-app/src/index.js",[],[],"/Users/ken0426/Documents/sano-project/react-todo-app/src/App.jsx",[],[],[],"/Users/ken0426/Documents/sano-project/react-todo-app/src/components/IncompleteTodo.jsx",["30","31","32"],[],"import React, { useState } from \"react\";\n\nexport const IncompleteTodo = ({\n  Todo,\n  onClickComplete,\n  onClickDelete,\n  onChange,\n}) => {\n  const [update, setUpdata] = useState(false);\n\n  const onChanges = (id, input) => {\n    Todo.map((todo) => {\n      if (todo.id === id) {\n        todo.todoText = input;\n        onChange(todo);\n      }\n    });\n  };\n\n  const handleEdit = (id) => {\n    Todo.map((todo) => {\n      if (todo.id === id) {\n        todo.check = true;\n        setUpdata(update ? false : true);\n      }\n    });\n  };\n\n  const onClickEdit = (id, input) => {\n    Todo.map((todo) => {\n      if (todo.id === id) {\n        if (input === \"\") {\n          alert(\"テキストを入力しないと保存できません\");\n        } else {\n          todo.check = false;\n          setUpdata(update ? false : true);\n        }\n      }\n    });\n  };\n\n  return (\n    <div className=\"incomplete-area\">\n      <p className=\"title\">未完了のTODO</p>\n      <ul>\n        {Todo.map((todo, index) => {\n          return (\n            <li className=\"list-row\" key={todo.id}>\n              {!todo.check ? (\n                <>\n                  <p>{todo.todoText}</p>\n                  <button onClick={() => onClickComplete(index)}>完了</button>\n                  <button onClick={() => onClickDelete(index)}>削除</button>\n                  <button onClick={() => handleEdit(todo.id)}>編集</button>\n                </>\n              ) : (\n                <div className=\"compilation-area\" key={todo.id}>\n                  <input\n                    placeholder=\"TODOを編集する\"\n                    value={todo.todoText}\n                    onChange={(e) => onChanges(todo.id, e.target.value)}\n                  />\n                  <div className=\"edit-area\">\n                    <button onClick={() => onClickEdit(todo.id, todo.todoText)}>\n                      内容を変更する\n                    </button>\n                  </div>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","/Users/ken0426/Documents/sano-project/react-todo-app/src/components/InputTodo.jsx",[],[],"/Users/ken0426/Documents/sano-project/react-todo-app/src/components/CompleteTodo.jsx",[],[],[],{"ruleId":"33","severity":1,"message":"34","line":12,"column":21,"nodeType":"35","messageId":"36","endLine":12,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":21,"column":21,"nodeType":"35","messageId":"36","endLine":21,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":30,"column":21,"nodeType":"35","messageId":"36","endLine":30,"endColumn":23},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]