{"ast":null,"code":"var _jsxFileName = \"/Users/ken0426/Documents/sano-project/react-todo-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodo } from \"./components/IncompleteTodo\";\nimport { CompleteTodo } from \"./components/CompleteTodo\"; // 追加機能\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todoText, setTodoText] = useState(\"\");\n  const [todoEdit, setTodoEdit] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [incompleteTodo, setIncompleteTodo] = useState([]);\n  const [completeTodo, setCompleteTodo] = useState([]);\n  const [check, setCheck] = useState(false);\n\n  const onChangeTodoText = event => setTodoText(event.target.value);\n\n  const onClickAdd = () => {\n    if (todoText !== \"\" && todoText.trim(0)) {\n      // ...→配列の順番を設定\n      setId(id + 1);\n      const newTodo = [...incompleteTodo, {\n        todoText,\n        id,\n        check\n      }];\n      setIncompleteTodo(newTodo);\n      setTodoText(\"\");\n    } else {\n      alert(\"テキストを入力してください\");\n    }\n  }; // 削除機能\n\n\n  const onClickDelete = index => {\n    const newTodo = [...incompleteTodo]; // splice\n    //一つ目の引数に何番目の要素を受け取って2つ目の要素にいくつ削除するかを指定できる\n\n    newTodo.splice(index, 1);\n    setIncompleteTodo(newTodo);\n  }; // 完了機能\n\n\n  const onClickComplete = index => {\n    const newIncompleteTodo = [...incompleteTodo];\n    newIncompleteTodo.splice(index, 1);\n    const newCompleteTodo = [...completeTodo, incompleteTodo[index]];\n    setIncompleteTodo(newIncompleteTodo);\n    setCompleteTodo(newCompleteTodo);\n  }; // 戻る機能\n\n\n  const onClickBack = index => {\n    const newCompleteTodo = [...completeTodo];\n    newCompleteTodo.splice(index, 1);\n    const newIncompleteTodo = [...incompleteTodo, completeTodo[index]];\n    setCompleteTodo(newCompleteTodo);\n    setIncompleteTodo(newIncompleteTodo);\n  }; // 編集機能\n\n\n  const onChangeTodoEdit = event => {\n    setTodoEdit(event.todoText);\n  };\n\n  const onClickEdit = index => {\n    if (todoEdit === \"\") {}\n\n    const newTodo = [...incompleteTodo, todoEdit];\n    newTodo.splice(index, 1);\n    setIncompleteTodo(newTodo);\n    setTodoEdit(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      onChange: onChangeTodoText,\n      onClick: onClickAdd,\n      disabled: incompleteTodo.length >= 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), incompleteTodo.length >= 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u767B\\u9332\\u3067\\u304D\\u308B\\u4E0A\\u9650\\u3092\\u8D85\\u3048\\u3066\\u3044\\u307E\\u3059\\u3002\\u5148\\u306B\\u6D88\\u5316\\u3057\\u3066\\u304B\\u3089\\u8FFD\\u52A0\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IncompleteTodo, {\n      Todo: incompleteTodo,\n      onClickComplete: onClickComplete,\n      onClickDelete: onClickDelete,\n      todoEdit: todoEdit,\n      onChange: onChangeTodoEdit,\n      onClickEdit: onClickEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompleteTodo, {\n      Todo: completeTodo,\n      onClickBack: onClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"RNW4Cu8n0LFZ+Ie4kP9SEZydikU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ken0426/Documents/sano-project/react-todo-app/src/App.jsx"],"names":["React","useState","InputTodo","IncompleteTodo","CompleteTodo","App","todoText","setTodoText","todoEdit","setTodoEdit","id","setId","incompleteTodo","setIncompleteTodo","completeTodo","setCompleteTodo","check","setCheck","onChangeTodoText","event","target","value","onClickAdd","trim","newTodo","alert","onClickDelete","index","splice","onClickComplete","newIncompleteTodo","newCompleteTodo","onClickBack","onChangeTodoEdit","onClickEdit","length","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodo } from \"./components/IncompleteTodo\";\nimport { CompleteTodo } from \"./components/CompleteTodo\";\n\n// 追加機能\nconst App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [todoEdit, setTodoEdit] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [incompleteTodo, setIncompleteTodo] = useState([]);\n  const [completeTodo, setCompleteTodo] = useState([]);\n  const [check, setCheck] = useState(false);\n\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  const onClickAdd = () => {\n    if (todoText !== \"\" && todoText.trim(0)) {\n      // ...→配列の順番を設定\n      setId(id + 1);\n      const newTodo = [...incompleteTodo, { todoText, id, check }];\n      setIncompleteTodo(newTodo);\n      setTodoText(\"\");\n    } else {\n      alert(\"テキストを入力してください\");\n    }\n  };\n\n  // 削除機能\n  const onClickDelete = (index) => {\n    const newTodo = [...incompleteTodo];\n    // splice\n    //一つ目の引数に何番目の要素を受け取って2つ目の要素にいくつ削除するかを指定できる\n    newTodo.splice(index, 1);\n    setIncompleteTodo(newTodo);\n  };\n  // 完了機能\n  const onClickComplete = (index) => {\n    const newIncompleteTodo = [...incompleteTodo];\n    newIncompleteTodo.splice(index, 1);\n\n    const newCompleteTodo = [...completeTodo, incompleteTodo[index]];\n    setIncompleteTodo(newIncompleteTodo);\n    setCompleteTodo(newCompleteTodo);\n  };\n\n  // 戻る機能\n  const onClickBack = (index) => {\n    const newCompleteTodo = [...completeTodo];\n    newCompleteTodo.splice(index, 1);\n    const newIncompleteTodo = [...incompleteTodo, completeTodo[index]];\n    setCompleteTodo(newCompleteTodo);\n    setIncompleteTodo(newIncompleteTodo);\n  };\n\n  // 編集機能\n  const onChangeTodoEdit = (event) => {\n    setTodoEdit(event.todoText);\n  };\n  const onClickEdit = (index) => {\n    if (todoEdit === \"\") {\n    }\n    const newTodo = [...incompleteTodo, todoEdit];\n    newTodo.splice(index, 1);\n    setIncompleteTodo(newTodo);\n    setTodoEdit(\"\");\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n        disabled={incompleteTodo.length >= 5}\n      />\n      {incompleteTodo.length >= 5 && (\n        <p style={{ color: \"red\" }}>\n          登録できる上限を超えています。先に消化してから追加してください。\n        </p>\n      )}\n      <IncompleteTodo\n        Todo={incompleteTodo}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n        todoEdit={todoEdit}\n        onChange={onChangeTodoEdit}\n        onClickEdit={onClickEdit}\n      />\n      <CompleteTodo Todo={completeTodo} onClickBack={onClickBack} />\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}