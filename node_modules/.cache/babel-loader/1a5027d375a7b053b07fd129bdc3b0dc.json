{"ast":null,"code":"var _jsxFileName = \"/Users/ken0426/Documents/sano-project/react-todo-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodo } from \"./components/IncompleteTodo\";\nimport { CompleteTodo } from \"./components/CompleteTodo\"; // 追加機能\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todoText, setTodoText] = useState(\"\");\n  const [todoEdit, setTodoEdit] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [incompleteTodo, setIncompleteTodo] = useState([]);\n  const [completeTodo, setCompleteTodo] = useState([]);\n\n  const onChangeTodoText = event => setTodoText(event.target.value);\n\n  const onClickAdd = () => {\n    if (todoText !== \"\" && todoText.trim(0)) {\n      // ...→配列の順番を設定\n      setId(id + 1);\n      const check = false;\n      const newTodo = [...incompleteTodo, {\n        todoText,\n        id,\n        check\n      }];\n      setIncompleteTodo(newTodo);\n      setTodoText(\"\");\n    } else {\n      alert(\"テキストを入力してください\");\n    }\n  }; // 削除機能\n\n\n  const onClickDelete = index => {\n    const newTodo = [...incompleteTodo]; // splice\n    //一つ目の引数に何番目の要素を受け取って2つ目の要素にいくつ削除するかを指定できる\n\n    newTodo.splice(index, 1);\n    setIncompleteTodo(newTodo);\n  }; // 完了機能\n\n\n  const onClickComplete = index => {\n    const datas = incompleteTodo.map(data => {\n      return data.todoText;\n    });\n    const newIncompleteTodo = [...incompleteTodo];\n    newIncompleteTodo.splice(index, 1);\n    const newCompleteTodo = [...completeTodo, incompleteTodo[index]]; //**  未完了タスクに入る配列*/\n\n    setIncompleteTodo(newIncompleteTodo); //** 完了済みに入るタスクの配列 */\n\n    setCompleteTodo(newCompleteTodo);\n  }; // 戻る機能\n\n\n  const onClickBack = index => {\n    const newIncompleteTodo = [...incompleteTodo, completeTodo[index]];\n    const newCompleteTodo = [...completeTodo];\n    newCompleteTodo.splice(index, 1);\n    setCompleteTodo(newCompleteTodo);\n    setIncompleteTodo(newIncompleteTodo);\n  }; // 編集機能\n\n\n  const onChangeTodoEdit = event => {\n    setTodoEdit(event.todoText);\n  }; // const onClickEdit = (index, check) => {\n  //   if (todoText === \"\") {\n  //     alert(\"テキストを入力してください\");\n  //   }\n  //   check = false;\n  //   const newTodo = [...incompleteTodo, todoEdit];\n  //   newTodo.splice(index, 1);\n  //   setIncompleteTodo(newTodo);\n  //   setTodoEdit(\"\");\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      onChange: onChangeTodoText,\n      onClick: onClickAdd,\n      disabled: incompleteTodo.length >= 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), incompleteTodo.length >= 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u767B\\u9332\\u3067\\u304D\\u308B\\u4E0A\\u9650\\u3092\\u8D85\\u3048\\u3066\\u3044\\u307E\\u3059\\u3002\\u5148\\u306B\\u6D88\\u5316\\u3057\\u3066\\u304B\\u3089\\u8FFD\\u52A0\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IncompleteTodo, {\n      Todo: incompleteTodo,\n      onClickComplete: onClickComplete,\n      onClickDelete: onClickDelete,\n      todoEdit: todoEdit,\n      onChange: onChangeTodoEdit,\n      onClickEdit: onClickEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompleteTodo, {\n      Todo: completeTodo,\n      onClickBack: onClickBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"BnQqZnFoTx5FHLP+CFkdFEp6+E0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ken0426/Documents/sano-project/react-todo-app/src/App.jsx"],"names":["React","useState","InputTodo","IncompleteTodo","CompleteTodo","App","todoText","setTodoText","todoEdit","setTodoEdit","id","setId","incompleteTodo","setIncompleteTodo","completeTodo","setCompleteTodo","onChangeTodoText","event","target","value","onClickAdd","trim","check","newTodo","alert","onClickDelete","index","splice","onClickComplete","datas","map","data","newIncompleteTodo","newCompleteTodo","onClickBack","onChangeTodoEdit","length","color","onClickEdit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodo } from \"./components/IncompleteTodo\";\nimport { CompleteTodo } from \"./components/CompleteTodo\";\n\n// 追加機能\nconst App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [todoEdit, setTodoEdit] = useState(\"\");\n  const [id, setId] = useState(0);\n  const [incompleteTodo, setIncompleteTodo] = useState([]);\n  const [completeTodo, setCompleteTodo] = useState([]);\n\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  const onClickAdd = () => {\n    if (todoText !== \"\" && todoText.trim(0)) {\n      // ...→配列の順番を設定\n      setId(id + 1);\n      const check = false;\n      const newTodo = [...incompleteTodo, { todoText, id, check }];\n      setIncompleteTodo(newTodo);\n      setTodoText(\"\");\n    } else {\n      alert(\"テキストを入力してください\");\n    }\n  };\n\n  // 削除機能\n  const onClickDelete = (index) => {\n    const newTodo = [...incompleteTodo];\n    // splice\n    //一つ目の引数に何番目の要素を受け取って2つ目の要素にいくつ削除するかを指定できる\n    newTodo.splice(index, 1);\n    setIncompleteTodo(newTodo);\n  };\n  // 完了機能\n  const onClickComplete = (index) => {\n    const datas = incompleteTodo.map((data) => {\n      return data.todoText;\n    });\n    const newIncompleteTodo = [...incompleteTodo];\n    newIncompleteTodo.splice(index, 1);\n\n    const newCompleteTodo = [...completeTodo, incompleteTodo[index]];\n    //**  未完了タスクに入る配列*/\n    setIncompleteTodo(newIncompleteTodo);\n\n    //** 完了済みに入るタスクの配列 */\n    setCompleteTodo(newCompleteTodo);\n  };\n\n  // 戻る機能\n  const onClickBack = (index) => {\n    const newIncompleteTodo = [...incompleteTodo, completeTodo[index]];\n    const newCompleteTodo = [...completeTodo];\n    newCompleteTodo.splice(index, 1);\n    setCompleteTodo(newCompleteTodo);\n    setIncompleteTodo(newIncompleteTodo);\n  };\n\n  // 編集機能\n  const onChangeTodoEdit = (event) => {\n    setTodoEdit(event.todoText);\n  };\n  // const onClickEdit = (index, check) => {\n  //   if (todoText === \"\") {\n  //     alert(\"テキストを入力してください\");\n  //   }\n  //   check = false;\n  //   const newTodo = [...incompleteTodo, todoEdit];\n  //   newTodo.splice(index, 1);\n  //   setIncompleteTodo(newTodo);\n  //   setTodoEdit(\"\");\n  // };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n        disabled={incompleteTodo.length >= 5}\n      />\n      {incompleteTodo.length >= 5 && (\n        <p style={{ color: \"red\" }}>\n          登録できる上限を超えています。先に消化してから追加してください。\n        </p>\n      )}\n      <IncompleteTodo\n        Todo={incompleteTodo}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n        todoEdit={todoEdit}\n        onChange={onChangeTodoEdit}\n        onClickEdit={onClickEdit}\n      />\n      <CompleteTodo Todo={completeTodo} onClickBack={onClickBack} />\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}